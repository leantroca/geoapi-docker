version: '3'
services:
  ### POETRY ########################################
  poetry-env:
    container_name: "poetry-env"
    build:
      context: "./poetry-env"
      dockerfile: "Dockerfile"
  ### POSTGIS #######################################
  postgis:
    container_name: "postgis"
    image: "postgis/postgis:latest"
    environment:
      POSTGRES_DB: "geoserver"
      POSTGRES_USER: "geoserver"
      POSTGRES_PASSWORD: "geoserver"
    volumes:
      - "./postgis/settings/CreateDB.sql:/docker-entrypoint-initdb.d/CreateDB.sql"
    ports:
      - "5433:5432"
  ### GEOSERVER #####################################
  geoserver:
    depends_on:
      - "postgis"
    container_name: "geoserver"
    # image: "docker.osgeo.org/geoserver:2.23.1"
    build:
      context: "./geoserver"
      dockerfile: "Dockerfile"
    # volumes:
    #   - "./settings/workspace-setup.sh:/opt/workspace-setup.sh"
    environment:
      SKIP_DEMO_DATA: "true"
      ROOT_WEBAPP_REDIRECT: "true"
      INSTALL_EXTENSIONS: "true"
      STABLE_EXTENSIONS: "importer"
      CORS_ENABLED: "true"
    ports:
      - "8081:8080"
  ### GEOAPI ########################################
  geoapi:
    depends_on: 
      - "geoserver"
      - "postgis"
      - "celery"
      - "redis"
      - "poetry-env"
    container_name: "geoapi"
    build:
      context: "./geoapi"
      dockerfile: "Dockerfile"
    ports:
      - "5001:5000"
    volumes:
      # - "/home/bridge/Documents/MINISTERIO/DEV/geoapi:/src"
      - "./geoapi/settings/settings.toml:/src/etc/settings.toml"
      - "/tmp/geoapi:/tmp"
  ### CELERY ########################################
  celery:
    depends_on:
      - "redis"
      - "poetry-env"
    container_name: "celery"
    build:
      context: "./celery"
      dockerfile: "Dockerfile"
    volumes:
      # - "/home/bridge/Documents/MINISTERIO/DEV/geoapi:/src"
      - "./celery/settings/settings.toml:/src/etc/settings.toml"
      - "/tmp/geoapi:/tmp"
  ### REDIS #########################################
  redis:
    container_name: "redis"
    image: "redis:latest"
    ports:
      - "6380:6379" # Redis port
  ### ARGENAMP ######################################
  # argenmap:
  #   container_name: "argenmap"
  #   build:
  #     context: "./argenmap"
  #     dockerfile: "Dockerfile"
  #   volumes:
  #     - ""
  #   ports:
  #     - "80:80"
  #     - "443:443"